/*
 * Copyright 2013 The Sculptor Project Team, including the original 
 * author or authors.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
module org.sculptor.generator.SculptorGenerator

import org.sculptor.generator.mwe2.SculptorUniversalGuiceWorkflowComponent
import org.sculptor.generator.mwe2.ImportAwareUriBaseReader

var modelFile

Workflow {
	// Read DSL model instance
	component = ImportAwareUriBaseReader {
		uri = modelFile
		register = SculptordslStandaloneSetup {}

		load = {
			slot = "model"
			type = "DslApplication"
		}
	}

	// Validate DSL model
	component = org.sculptor.generator.mwe2.SculptordslValidationWorkflowComponent {
		modelSlot = "model"
	}

	// Model transformation from DSL meta model to meta model
	component = SculptorUniversalGuiceWorkflowComponent {
		inputSlot = "model"
		outputSlot = "transformed"
		guiceModule = "org.sculptor.generator.transform.DslTransformationModule"
		action = "org.sculptor.generator.transform.DslTransformation.transform"
	}

	component = SculptorUniversalGuiceWorkflowComponent {
		inputSlot = "transformed"
		outputSlot = "pass2transformation"
		guiceModule = "org.sculptor.generator.transform.DslTransformationModule"
		action = "org.sculptor.generator.transform.Transformation.modify"
	}

	component = SculptorUniversalGuiceWorkflowComponent {
		inputSlot = "pass2transformation"
		guiceModule = "org.sculptor.generator.template.TemplateModule"
		action = "org.sculptor.generator.template.RootTmpl.Root"
	}
}